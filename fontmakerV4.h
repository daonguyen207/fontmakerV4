#include "myfontmakerV4.h"
const uint8_t  PROGMEM xt5464543543543_font_8x8[]={
8,13,
//Font:Tahoma Size:8.25
//OFSETX:-2 OFSETY:0
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 
0x20,0x10,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//À
0x10,0x20,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Á
0x30,0x10,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ả
0x68,0x58,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ã
0x00,0x00,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x10,//Ạ
0x48,0x30,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ă
0x20,0x78,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ằ
0x10,0x78,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ắ
0x30,0x78,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ẳ
0x78,0x78,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ẵ
0x48,0x30,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x10,//Ặ
0x30,0x48,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Â
0xB0,0x48,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ầ
0x34,0x48,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ấ
0x36,0x4A,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ẩ
0x78,0x30,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//Ẫ
0x30,0x48,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x10,//Ậ
0x00,0x00,0x00,0x78,0x44,0x42,0xF2,0x42,0x42,0x44,0x78,0x00,0x00,//Đ
0x20,0x10,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//È
0x10,0x20,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//É
0x60,0x20,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ẻ
0x68,0x58,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ẽ
0x00,0x00,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x20,//Ẹ
0x30,0x48,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ê
0xB0,0x48,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ề
0x34,0x48,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ế
0x36,0x4A,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ể
0x78,0x30,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//Ễ
0x30,0x48,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x20,//Ệ
0x80,0x40,0x00,0xE0,0x40,0x40,0x40,0x40,0x40,0x40,0xE0,0x00,0x00,//Ì
0x20,0x40,0x00,0xE0,0x40,0x40,0x40,0x40,0x40,0x40,0xE0,0x00,0x00,//Í
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 
0x00,0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x40,0x00,0x00,//!
0x00,0x00,0xA0,0xA0,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"
0x00,0x00,0x00,0x14,0x14,0x7E,0x28,0x28,0xFC,0x50,0x50,0x00,0x00,//#
0x00,0x00,0x20,0x20,0x78,0xA0,0xA0,0x70,0x28,0x28,0xF0,0x20,0x20,//$
0x00,0x00,0x00,0x62,0x92,0x94,0x64,0x09,0x0A,0x12,0x11,0x00,0x00,//%
0x00,0x00,0x00,0x60,0x90,0x90,0x64,0x94,0x88,0x8C,0x72,0x00,0x00,//&
0x00,0x00,0x80,0x80,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//‘
0x00,0x00,0x20,0x40,0x40,0x80,0x80,0x80,0x80,0x80,0x40,0x40,0x20,//(
0x00,0x00,0x80,0x40,0x40,0x20,0x20,0x20,0x20,0x20,0x40,0x40,0x80,//)
0x00,0x00,0x20,0xA8,0x70,0xA8,0x20,0x00,0x00,0x00,0x00,0x00,0x00,//*
0x00,0x00,0x00,0x00,0x10,0x10,0x10,0xFE,0x10,0x10,0x10,0x00,0x00,//+
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x80,//,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,//–
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x00,//.
0x00,0x00,0x20,0x20,0x20,0x40,0x40,0x40,0x40,0x40,0x80,0x80,0x80,///
0x00,0x00,0x00,0x70,0x88,0x88,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//0
0x00,0x00,0x00,0x20,0x60,0x20,0x20,0x20,0x20,0x20,0x70,0x00,0x00,//1
0x00,0x00,0x00,0x70,0x88,0x08,0x10,0x20,0x40,0x80,0xF8,0x00,0x00,//2
0x00,0x00,0x00,0x70,0x88,0x08,0x30,0x08,0x08,0x88,0x70,0x00,0x00,//3
0x00,0x00,0x00,0x10,0x30,0x50,0x90,0xF8,0x10,0x10,0x10,0x00,0x00,//4
0x00,0x00,0x00,0xF8,0x80,0x80,0xF0,0x08,0x08,0x88,0x70,0x00,0x00,//5
0x00,0x00,0x00,0x30,0x40,0x80,0xF0,0x88,0x88,0x88,0x70,0x00,0x00,//6
0x00,0x00,0x00,0xF8,0x08,0x10,0x10,0x20,0x20,0x40,0x40,0x00,0x00,//7
0x00,0x00,0x00,0x70,0x88,0x88,0x70,0x88,0x88,0x88,0x70,0x00,0x00,//8
0x00,0x00,0x00,0x70,0x88,0x88,0x88,0x78,0x08,0x10,0x60,0x00,0x00,//9
0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x00,0x40,0x40,0x00,0x00,//:
0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x00,0x00,0x40,0x40,0x40,0x80,//;
0x00,0x00,0x00,0x00,0x02,0x0C,0x30,0x40,0x30,0x0C,0x02,0x00,0x00,//<
0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,0x00,0x00,0x00,0x00,//=
0x00,0x00,0x00,0x00,0x40,0x30,0x0C,0x02,0x0C,0x30,0x40,0x00,0x00,//>
0x00,0x00,0x00,0xE0,0x10,0x10,0x20,0x40,0x40,0x00,0x40,0x00,0x00,//?
0x00,0x00,0x00,0x3E,0x41,0x9C,0xA4,0xA4,0xA4,0x9F,0x40,0x3C,0x00,//@
0x00,0x00,0x00,0x30,0x30,0x48,0x48,0x48,0xFC,0x84,0x84,0x00,0x00,//A
0x00,0x00,0x00,0xF0,0x88,0x88,0xF0,0x88,0x88,0x88,0xF0,0x00,0x00,//B
0x00,0x00,0x00,0x3C,0x40,0x80,0x80,0x80,0x80,0x40,0x3C,0x00,0x00,//C
0x00,0x00,0x00,0xF0,0x88,0x84,0x84,0x84,0x84,0x88,0xF0,0x00,0x00,//D
0x00,0x00,0x00,0xF8,0x80,0x80,0xF0,0x80,0x80,0x80,0xF8,0x00,0x00,//E
0x00,0x00,0x00,0xF8,0x80,0x80,0xF8,0x80,0x80,0x80,0x80,0x00,0x00,//F
0x00,0x00,0x00,0x3C,0x40,0x80,0x80,0x9C,0x84,0x44,0x3C,0x00,0x00,//G
0x00,0x00,0x00,0x84,0x84,0x84,0xFC,0x84,0x84,0x84,0x84,0x00,0x00,//H
0x00,0x00,0x00,0xE0,0x40,0x40,0x40,0x40,0x40,0x40,0xE0,0x00,0x00,//I
0x00,0x00,0x00,0x70,0x10,0x10,0x10,0x10,0x10,0x10,0xE0,0x00,0x00,//J
0x00,0x00,0x00,0x88,0x90,0xA0,0xC0,0xC0,0xA0,0x90,0x88,0x00,0x00,//K
0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xF0,0x00,0x00,//L
0x00,0x00,0x00,0xC6,0xC6,0xAA,0xAA,0x92,0x92,0x82,0x82,0x00,0x00,//M
0x00,0x00,0x00,0xC4,0xC4,0xA4,0xA4,0x94,0x94,0x8C,0x8C,0x00,0x00,//N
0x00,0x00,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//O
0x00,0x00,0x00,0xF0,0x88,0x88,0x88,0xF0,0x80,0x80,0x80,0x00,0x00,//P
0x00,0x00,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x08,0x06,//Q
0x00,0x00,0x00,0xF0,0x88,0x88,0x88,0xF0,0x90,0x88,0x84,0x00,0x00,//R
0x00,0x00,0x00,0x78,0x80,0x80,0x70,0x08,0x08,0x08,0xF0,0x00,0x00,//S
0x00,0x00,0x00,0xF8,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,//T
0x00,0x00,0x00,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//U
0x00,0x00,0x00,0x88,0x88,0x88,0x50,0x50,0x50,0x20,0x20,0x00,0x00,//V
0x00,0x00,0x00,0x88,0x88,0x88,0x55,0x55,0x55,0x22,0x22,0x00,0x00,//W
0x00,0x00,0x00,0x88,0x88,0x50,0x20,0x20,0x50,0x88,0x88,0x00,0x00,//X
0x00,0x00,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x20,0x20,0x00,0x00,//Y
0x00,0x00,0x00,0xF8,0x08,0x10,0x20,0x20,0x40,0x80,0xF8,0x00,0x00,//Z
0x00,0x00,0xE0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xE0,//[
0x00,0x00,0x80,0x80,0x80,0x40,0x40,0x40,0x40,0x40,0x20,0x20,0x20,
0x00,0x00,0xE0,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xE0,//]
0x00,0x00,0x00,0x10,0x28,0x44,0x82,0x00,0x00,0x00,0x00,0x00,0x00,//^
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,//_
0x00,0x00,0x40,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`
0x00,0x00,0x00,0x00,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//a
0x00,0x00,0x80,0x80,0x80,0xF0,0x88,0x88,0x88,0x88,0xF0,0x00,0x00,//b
0x00,0x00,0x00,0x00,0x00,0x70,0x80,0x80,0x80,0x80,0x70,0x00,0x00,//c
0x00,0x00,0x08,0x08,0x08,0x78,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//d
0x00,0x00,0x00,0x00,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//e
0x00,0x00,0x60,0x80,0x80,0xE0,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//f
0x00,0x00,0x00,0x00,0x00,0x78,0x88,0x88,0x88,0x88,0x78,0x08,0x70,//g
0x00,0x00,0x80,0x80,0x80,0xF0,0x88,0x88,0x88,0x88,0x88,0x00,0x00,//h
0x00,0x00,0x00,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//i
0x00,0x00,0x00,0x40,0x00,0xC0,0x40,0x40,0x40,0x40,0x40,0x40,0x80,//j
0x00,0x00,0x80,0x80,0x80,0x90,0xA0,0xC0,0xA0,0x90,0x88,0x00,0x00,//k
0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//l
0x00,0x00,0x00,0x00,0x00,0xEC,0x92,0x92,0x92,0x92,0x92,0x00,0x00,//m
0x00,0x00,0x00,0x00,0x00,0xF0,0x88,0x88,0x88,0x88,0x88,0x00,0x00,//n
0x00,0x00,0x00,0x00,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//o
0x00,0x00,0x00,0x00,0x00,0xF0,0x88,0x88,0x88,0x88,0xF0,0x80,0x80,//p
0x00,0x00,0x00,0x00,0x00,0x78,0x88,0x88,0x88,0x88,0x78,0x08,0x08,//q
0x00,0x00,0x00,0x00,0x00,0xA0,0xC0,0x80,0x80,0x80,0x80,0x00,0x00,//r
0x00,0x00,0x00,0x00,0x00,0x70,0x80,0xC0,0x30,0x10,0xE0,0x00,0x00,//s
0x00,0x00,0x00,0x80,0x80,0xE0,0x80,0x80,0x80,0x80,0x60,0x00,0x00,//t
0x00,0x00,0x00,0x00,0x00,0x88,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//u
0x00,0x00,0x00,0x00,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x00,0x00,//v
0x00,0x00,0x00,0x00,0x00,0x92,0x92,0xAA,0xAA,0x44,0x44,0x00,0x00,//w
0x00,0x00,0x00,0x00,0x00,0x88,0x50,0x20,0x20,0x50,0x88,0x00,0x00,//x
0x00,0x00,0x00,0x00,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x40,0x40,//y
0x00,0x00,0x00,0x00,0x00,0xF0,0x10,0x20,0x40,0x80,0xF0,0x00,0x00,//z
0x00,0x00,0x10,0x20,0x20,0x20,0x20,0xC0,0x20,0x20,0x20,0x20,0x10,//{
0x00,0x00,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,//|
0x00,0x00,0x80,0x40,0x40,0x40,0x40,0x30,0x40,0x40,0x40,0x40,0x80,//}
0x00,0x00,0x00,0x00,0x00,0x00,0x62,0x92,0x8C,0x00,0x00,0x00,0x00,//~
0xC0,0x40,0x00,0xE0,0x40,0x40,0x40,0x40,0x40,0x40,0xE0,0x00,0x00,//Ỉ
0xA0,0xE0,0x00,0xE0,0x40,0x40,0x40,0x40,0x40,0x40,0xE0,0x00,0x00,//Ĩ
0x00,0x00,0x00,0xE0,0x40,0x40,0x40,0x40,0x40,0x40,0xE0,0x00,0x40,//Ị
0x20,0x10,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ò
0x08,0x10,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ó
0x30,0x10,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ỏ
0x34,0x2C,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Õ
0x00,0x00,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x10,//Ọ
0x18,0x24,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ô
0x58,0x24,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ồ
0x1A,0x24,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ố
0x36,0x4A,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ổ
0x3C,0x18,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ỗ
0x18,0x24,0x00,0x38,0x44,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x10,//Ộ
0x00,0x00,0x00,0x39,0x46,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ơ
0x20,0x10,0x00,0x39,0x46,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ờ
0x08,0x10,0x00,0x39,0x46,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ớ
0x30,0x10,0x00,0x39,0x46,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ở
0x34,0x2C,0x00,0x39,0x46,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x00,//Ỡ
0x00,0x00,0x00,0x39,0x46,0x82,0x82,0x82,0x82,0x44,0x38,0x00,0x10,//Ợ
0x20,0x10,0x00,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ù
0x10,0x20,0x00,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ú
0x30,0x10,0x00,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ủ
0x68,0x58,0x00,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ũ
0x00,0x00,0x00,0x84,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x10,//Ụ
0x00,0x00,0x01,0x86,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ư
0x20,0x10,0x01,0x86,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ừ
0x10,0x20,0x01,0x86,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ứ
0x30,0x10,0x01,0x86,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ử
0x68,0x58,0x01,0x86,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x00,//Ữ
0x00,0x00,0x01,0x86,0x84,0x84,0x84,0x84,0x84,0x84,0x78,0x00,0x10,//Ự
0x40,0x20,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x20,0x20,0x00,0x00,//Ỳ
0x10,0x20,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x20,0x20,0x00,0x00,//Ý
0x60,0x20,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x20,0x20,0x00,0x00,//Ỷ
0x68,0x58,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x20,0x20,0x00,0x00,//Ỹ
0x00,0x00,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x20,0x20,0x00,0x20,//Ỵ
0x00,0x00,0x20,0x10,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//à
0x00,0x00,0x10,0x20,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//á
0x00,0x00,0x30,0x10,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ả
0x00,0x00,0x68,0x58,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ã
0x00,0x00,0x00,0x00,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x10,//ạ
0x00,0x00,0x48,0x30,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ă
0x00,0x10,0x48,0x30,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ằ
0x00,0x20,0x48,0x30,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ắ
0x30,0x10,0x48,0x30,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ẳ
0x68,0x58,0x48,0x30,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ẵ
0x00,0x00,0x48,0x30,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x10,//ặ
0x00,0x00,0x30,0x48,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//â
0x00,0x00,0xB0,0x48,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ầ
0x00,0x00,0x34,0x48,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ấ
0x00,0x06,0x32,0x48,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ẩ
0x68,0x58,0x30,0x48,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x00,//ẫ
0x00,0x00,0x30,0x48,0x00,0x70,0x08,0x78,0x88,0x88,0x78,0x00,0x10,//ậ
0x00,0x00,0x08,0x3C,0x08,0x78,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//đ
0x00,0x00,0x40,0x20,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//è
0x00,0x00,0x10,0x20,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//é
0x00,0x00,0x60,0x20,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ẻ
0x00,0x00,0x68,0x58,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ẽ
0x00,0x00,0x00,0x00,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x20,//ẹ
0x00,0x00,0x30,0x48,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ê
0x00,0x00,0xB0,0x48,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ề
0x00,0x00,0x34,0x48,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ế
0x00,0x0C,0x64,0x90,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ể
0x68,0x58,0x30,0x48,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x00,//ễ
0x00,0x00,0x30,0x48,0x00,0x70,0x88,0xF8,0x80,0x88,0x70,0x00,0x20,//ệ
0x00,0x00,0x00,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//ì
0x00,0x00,0x40,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//í
0x00,0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//ỉ
0x00,0x00,0xA0,0x60,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,//ĩ
0x00,0x00,0x00,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x80,//ị
0x00,0x00,0x40,0x20,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ò
0x00,0x00,0x10,0x20,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ó
0x00,0x00,0x60,0x20,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ỏ
0x00,0x00,0x68,0x58,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//õ
0x00,0x00,0x00,0x00,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x20,//ọ
0x00,0x00,0x30,0x48,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ô
0x00,0x00,0xB0,0x48,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ồ
0x00,0x00,0x68,0x90,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ố
0x00,0x0C,0x64,0x90,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ổ
0x68,0x58,0x30,0x48,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ỗ
0x00,0x00,0x30,0x48,0x00,0x70,0x88,0x88,0x88,0x88,0x70,0x00,0x20,//ộ
0x00,0x00,0x00,0x00,0x04,0x78,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ơ
0x00,0x00,0x40,0x20,0x04,0x78,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ờ
0x00,0x00,0x10,0x20,0x04,0x78,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ớ
0x00,0x00,0x60,0x20,0x04,0x78,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ở
0x00,0x00,0xD0,0xB0,0x04,0x78,0x88,0x88,0x88,0x88,0x70,0x00,0x00,//ỡ
0x00,0x00,0x00,0x00,0x04,0x78,0x88,0x88,0x88,0x88,0x70,0x00,0x20,//ợ
0x00,0x00,0x40,0x20,0x00,0x88,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ù
0x00,0x00,0x10,0x20,0x00,0x88,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ú
0x00,0x00,0x60,0x20,0x00,0x88,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ủ
0x00,0x00,0x68,0x58,0x00,0x88,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ũ
0x00,0x00,0x00,0x00,0x00,0x88,0x88,0x88,0x88,0x88,0x78,0x00,0x20,//ụ
0x00,0x00,0x00,0x00,0x02,0x8C,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ư
0x00,0x00,0x40,0x20,0x02,0x8C,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ừ
0x00,0x00,0x10,0x20,0x02,0x8C,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ứ
0x00,0x00,0x60,0x20,0x02,0x8C,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ử
0x00,0x00,0x68,0x58,0x02,0x8C,0x88,0x88,0x88,0x88,0x78,0x00,0x00,//ữ
0x00,0x00,0x00,0x00,0x02,0x8C,0x88,0x88,0x88,0x88,0x78,0x00,0x20,//ự
0x00,0x00,0x40,0x20,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x40,0x40,//ỳ
0x00,0x00,0x10,0x20,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x40,0x40,//ý
0x00,0x00,0x60,0x20,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x40,0x40,//ỷ
0x00,0x00,0x68,0x58,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x40,0x40,//ỹ
0x00,0x00,0x00,0x00,0x00,0x88,0x88,0x50,0x50,0x20,0x20,0x40,0x48,//ỵ
};
const uint8_t  PROGMEM xt5464543543543_font_8x8_length[]={
//8,13,
//Font:Tahoma Size:8.25
//OFSETX:-2 OFSETY:0
3,// 
7,//À
7,//Á
7,//Ả
7,//Ã
7,//Ạ
7,//Ă
7,//Ằ
7,//Ắ
7,//Ẳ
7,//Ẵ
7,//Ặ
7,//Â
7,//Ầ
7,//Ấ
8,//Ẩ
7,//Ẫ
7,//Ậ
8,//Đ
6,//È
6,//É
6,//Ẻ
6,//Ẽ
6,//Ẹ
6,//Ê
6,//Ề
7,//Ế
8,//Ể
6,//Ễ
6,//Ệ
4,//Ì
4,//Í
3,// 
3,//!
4,//"
8,//#
6,//$
8,//%
8,//&
3,//‘
4,//(
4,//)
6,//*
8,//+
3,//,
7,//–
3,//.
4,///
6,//0
5,//1
6,//2
6,//3
6,//4
6,//5
6,//6
6,//7
6,//8
6,//9
3,//:
3,//;
8,//<
8,//=
8,//>
5,//?
8,//@
7,//A
6,//B
7,//C
7,//D
6,//E
6,//F
7,//G
7,//H
4,//I
5,//J
6,//K
5,//L
8,//M
7,//N
8,//O
6,//P
8,//Q
7,//R
6,//S
6,//T
7,//U
6,//V
8,//W
6,//X
6,//Y
6,//Z
4,//[
4,//
4,//]
8,//^
7,//_
4,//`
6,//a
6,//b
5,//c
6,//d
6,//e
4,//f
6,//g
6,//h
2,//i
3,//j
6,//k
2,//l
8,//m
6,//n
6,//o
6,//p
6,//q
4,//r
5,//s
4,//t
6,//u
6,//v
8,//w
6,//x
6,//y
5,//z
5,//{
3,//|
5,//}
8,//~
4,//Ỉ
4,//Ĩ
4,//Ị
8,//Ò
8,//Ó
8,//Ỏ
8,//Õ
8,//Ọ
8,//Ô
8,//Ồ
8,//Ố
8,//Ổ
8,//Ỗ
8,//Ộ
8,//Ơ
8,//Ờ
8,//Ớ
8,//Ở
8,//Ỡ
8,//Ợ
7,//Ù
7,//Ú
7,//Ủ
7,//Ũ
7,//Ụ
8,//Ư
8,//Ừ
8,//Ứ
8,//Ử
8,//Ữ
8,//Ự
6,//Ỳ
6,//Ý
6,//Ỷ
6,//Ỹ
6,//Ỵ
6,//à
6,//á
6,//ả
6,//ã
6,//ạ
6,//ă
6,//ằ
6,//ắ
6,//ẳ
6,//ẵ
6,//ặ
6,//â
6,//ầ
7,//ấ
8,//ẩ
6,//ẫ
6,//ậ
7,//đ
6,//è
6,//é
6,//ẻ
6,//ẽ
6,//ẹ
6,//ê
6,//ề
7,//ế
7,//ể
6,//ễ
6,//ệ
2,//ì
3,//í
2,//ỉ
4,//ĩ
2,//ị
6,//ò
6,//ó
6,//ỏ
6,//õ
6,//ọ
6,//ô
6,//ồ
6,//ố
7,//ổ
6,//ỗ
6,//ộ
7,//ơ
7,//ờ
7,//ớ
7,//ở
7,//ỡ
7,//ợ
6,//ù
6,//ú
6,//ủ
6,//ũ
6,//ụ
8,//ư
8,//ừ
8,//ứ
8,//ử
8,//ữ
8,//ự
6,//ỳ
6,//ý
6,//ỷ
6,//ỹ
6,//ỵ
};
my_font font_8_8(xt5464543543543_font_8x8,xt5464543543543_font_8x8_length);

const uint32_t PROGMEM UTF8_table[] =
{
/*add_here1*/

0x00000000, // 
0x0000C380, //À
0x0000C381, //Á
0x00E1BAA2, //Ả
0x0000C383, //Ã
0x00E1BAA0, //Ạ
0x0000C482, //Ă
0x00E1BAB0, //Ằ
0x00E1BAAE, //Ắ
0x00E1BAB2, //Ẳ
0x00E1BAB4, //Ẵ
0x00E1BAB6, //Ặ
0x0000C382, //Â
0x00E1BAA6, //Ầ
0x00E1BAA4, //Ấ
0x00E1BAA8, //Ẩ
0x00E1BAAA, //Ẫ
0x00E1BAAC, //Ậ
0x0000C490, //Đ
0x0000C388, //È
0x0000C389, //É
0x00E1BABA, //Ẻ
0x00E1BABC, //Ẽ
0x00E1BAB8, //Ẹ
0x0000C38A, //Ê
0x00E1BB80, //Ề
0x00E1BABE, //Ế
0x00E1BB82, //Ể
0x00E1BB84, //Ễ
0x00E1BB86, //Ệ
0x0000C38C, //Ì
0x0000C38D, //Í
0x00000020, // 
0x00000021, //!
0x00000022, //"
0x00000023, //#
0x00000024, //$
0x00000025, //%
0x00000026, //&
0x00E28098, //‘
0x00000028, //(
0x00000029, //)
0x0000002A, //*
0x0000002B, //+
0x0000002C, //,
0x00E28093, //–
0x0000002E, //.
0x0000002F, ///
0x00000030, //0
0x00000031, //1
0x00000032, //2
0x00000033, //3
0x00000034, //4
0x00000035, //5
0x00000036, //6
0x00000037, //7
0x00000038, //8
0x00000039, //9
0x0000003A, //:
0x0000003B, //;
0x0000003C, //<
0x0000003D, //=
0x0000003E, //>
0x0000003F, //?
0x00000040, //@
0x00000041, //A
0x00000042, //B
0x00000043, //C
0x00000044, //D
0x00000045, //E
0x00000046, //F
0x00000047, //G
0x00000048, //H
0x00000049, //I
0x0000004A, //J
0x0000004B, //K
0x0000004C, //L
0x0000004D, //M
0x0000004E, //N
0x0000004F, //O
0x00000050, //P
0x00000051, //Q
0x00000052, //R
0x00000053, //S
0x00000054, //T
0x00000055, //U
0x00000056, //V
0x00000057, //W
0x00000058, //X
0x00000059, //Y
0x0000005A, //Z
0x0000005B, //[
0x0000005C, //
0x0000005D, //]
0x0000005E, //^
0x0000005F, //_
0x00000060, //`
0x00000061, //a
0x00000062, //b
0x00000063, //c
0x00000064, //d
0x00000065, //e
0x00000066, //f
0x00000067, //g
0x00000068, //h
0x00000069, //i
0x0000006A, //j
0x0000006B, //k
0x0000006C, //l
0x0000006D, //m
0x0000006E, //n
0x0000006F, //o
0x00000070, //p
0x00000071, //q
0x00000072, //r
0x00000073, //s
0x00000074, //t
0x00000075, //u
0x00000076, //v
0x00000077, //w
0x00000078, //x
0x00000079, //y
0x0000007A, //z
0x0000007B, //{
0x0000007C, //|
0x0000007D, //}
0x0000007E, //~
0x00E1BB88, //Ỉ
0x0000C4A8, //Ĩ
0x00E1BB8A, //Ị
0x0000C392, //Ò
0x0000C393, //Ó
0x00E1BB8E, //Ỏ
0x0000C395, //Õ
0x00E1BB8C, //Ọ
0x0000C394, //Ô
0x00E1BB92, //Ồ
0x00E1BB90, //Ố
0x00E1BB94, //Ổ
0x00E1BB96, //Ỗ
0x00E1BB98, //Ộ
0x0000C6A0, //Ơ
0x00E1BB9C, //Ờ
0x00E1BB9A, //Ớ
0x00E1BB9E, //Ở
0x00E1BBA0, //Ỡ
0x00E1BBA2, //Ợ
0x0000C399, //Ù
0x0000C39A, //Ú
0x00E1BBA6, //Ủ
0x0000C5A8, //Ũ
0x00E1BBA4, //Ụ
0x0000C6AF, //Ư
0x00E1BBAA, //Ừ
0x00E1BBA8, //Ứ
0x00E1BBAC, //Ử
0x00E1BBAE, //Ữ
0x00E1BBB0, //Ự
0x00E1BBB2, //Ỳ
0x0000C39D, //Ý
0x00E1BBB6, //Ỷ
0x00E1BBB8, //Ỹ
0x00E1BBB4, //Ỵ
0x0000C3A0, //à
0x0000C3A1, //á
0x00E1BAA3, //ả
0x0000C3A3, //ã
0x00E1BAA1, //ạ
0x0000C483, //ă
0x00E1BAB1, //ằ
0x00E1BAAF, //ắ
0x00E1BAB3, //ẳ
0x00E1BAB5, //ẵ
0x00E1BAB7, //ặ
0x0000C3A2, //â
0x00E1BAA7, //ầ
0x00E1BAA5, //ấ
0x00E1BAA9, //ẩ
0x00E1BAAB, //ẫ
0x00E1BAAD, //ậ
0x0000C491, //đ
0x0000C3A8, //è
0x0000C3A9, //é
0x00E1BABB, //ẻ
0x00E1BABD, //ẽ
0x00E1BAB9, //ẹ
0x0000C3AA, //ê
0x00E1BB81, //ề
0x00E1BABF, //ế
0x00E1BB83, //ể
0x00E1BB85, //ễ
0x00E1BB87, //ệ
0x0000C3AC, //ì
0x0000C3AD, //í
0x00E1BB89, //ỉ
0x0000C4A9, //ĩ
0x00E1BB8B, //ị
0x0000C3B2, //ò
0x0000C3B3, //ó
0x00E1BB8F, //ỏ
0x0000C3B5, //õ
0x00E1BB8D, //ọ
0x0000C3B4, //ô
0x00E1BB93, //ồ
0x00E1BB91, //ố
0x00E1BB95, //ổ
0x00E1BB97, //ỗ
0x00E1BB99, //ộ
0x0000C6A1, //ơ
0x00E1BB9D, //ờ
0x00E1BB9B, //ớ
0x00E1BB9F, //ở
0x00E1BBA1, //ỡ
0x00E1BBA3, //ợ
0x0000C3B9, //ù
0x0000C3BA, //ú
0x00E1BBA7, //ủ
0x0000C5A9, //ũ
0x00E1BBA5, //ụ
0x0000C6B0, //ư
0x00E1BBAB, //ừ
0x00E1BBA9, //ứ
0x00E1BBAD, //ử
0x00E1BBAF, //ữ
0x00E1BBB1, //ự
0x00E1BBB3, //ỳ
0x0000C3BD, //ý
0x00E1BBB7, //ỷ
0x00E1BBB9, //ỹ
0x00E1BBB5, //ỵ
0x00E4BDA0, //你
0x00E5A5BD, //好
0x00E69C8B, //朋
0x00E58F8B, //友
0x00E29DA4, //❤
0x0000C2B0, //°

//data_add_xxx
};
uint16_t UTF8_GetAddr(unsigned char *utf8_char,unsigned char *char_offset)
{
 uint32_t utf8_value=0x00000000;
 unsigned char temp = 0xF0 & (*utf8_char);
 *char_offset=1;
  if((*utf8_char)<128) //nếu đây là kí tự trong bảng ascii
    utf8_value = *utf8_char;
  else if(temp == 0xC0) //loại utf-8 2 byte
  {
    *char_offset=2;
    utf8_value= (uint32_t)(*utf8_char) << 8;
    utf8_value|=(uint32_t)(*(utf8_char+1));
    #ifdef arduinoIDE
      utf8_value&=0x0000FFFF;
    #endif  
  }
  else if(temp == 0xE0)    //loại utf-8 3 byte
  {
    *char_offset = 3;                  
    utf8_value= (uint32_t)(*utf8_char) << 16;     
    utf8_value|=(uint32_t)(*(utf8_char+1)) << 8;    
    utf8_value|=(uint32_t)(*(utf8_char+2));          
    #ifdef arduinoIDE
      utf8_value&=0x00FFFFFF;
    #endif  
  }
  else if(temp == 0xF0)    //loại utf-8 4 byte
  {
    *char_offset = 4;                  
    utf8_value= (uint32_t)(*utf8_char) << 24;     
    utf8_value|=(uint32_t)(*(utf8_char+1)) << 16;    
    utf8_value|=(uint32_t)(*(utf8_char+2)) << 8;   
    utf8_value|=(uint32_t)(*(utf8_char+3));       
  }
  else return '?';
  for(unsigned char i = 0; i < sizeof(UTF8_table)/4; i++)
  {
      #ifdef arduinoIDE
       if(utf8_value == pgm_read_dword(UTF8_table + i))
      #else
       if(utf8_value == UTF8_table[i])
      #endif    
                return i;
  }
  return '?';
}

typedef void (*set_px_typedef)(int16_t x,int16_t y,uint16_t color);  //hệ màu 565
typedef void (*set_px2_typedef)(int16_t x,int16_t y,uint8_t cR,uint8_t cG,uint8_t cB); //hệ màu RGB

class MakeFontV4
{
  private:
  const uint8_t *font_poniter;
  const uint8_t *font_length_poniter;
  uint8_t font_sizew = 0;
  uint8_t font_sizeh = 0;
  uint16_t max_width = 0;
  uint16_t max_height = 0;
  set_px_typedef FontMaker_setpx;
  set_px2_typedef FontMaker_setpx2;
  
  public:  
  MakeFontV4(set_px_typedef _set_px)
  {
     FontMaker_setpx = _set_px;
     setFont(font_8_8);
  }
  MakeFontV4(set_px2_typedef _set_px)
  {
     FontMaker_setpx2 = _set_px;
     setFont(font_8_8);
  }
  void setArea(uint16_t _max_width, uint16_t _max_height)
  {
    max_width = _max_width - 1;
    max_height = _max_height - 1;
  }
  void setFont(my_font _font)
  {
     font_poniter = _font.font_poniter;
     font_length_poniter = _font.font_length_poniter;
     font_sizew = pgm_read_byte(font_poniter + 0);
     font_sizeh = pgm_read_byte(font_poniter + 1);
  }
  int getPixelColor(int x, int y, int txt)
  {
    if (x >= font_sizew) return 0;
    if (y >= font_sizeh) return 0;
    if (x <0) return 0;
    if (y <0) return 0;
    int octec = font_sizew/8 + ((font_sizew%8==0)?0:1);
  
    return pgm_read_byte(font_poniter + 2 + txt*octec*font_sizeh + y*octec + x/8) & (0x80>>(x%8));
  }
  int getSizeWtxt(int index)
  {
    if(font_length_poniter==0)return 0;
    return pgm_read_byte(font_length_poniter + index);
  }
  int getDeCacHeight()
  {
    if(font_poniter==0)return 0;
    return pgm_read_byte(font_poniter + 1);
  }
  int putChar(int x,int y,int chart,uint16_t color)
  {
    int sizeFontW = getSizeWtxt(chart);
    for(int w=0;w<sizeFontW;w++)
    {
      for(int h=0;h<getDeCacHeight();h++)
      {
        if(getPixelColor(w,h,chart)!=0)
            FontMaker_setpx(x+w,y+h,color);
      }
    }
     return sizeFontW;
  }
  int putChar(int x,int y,int chart,int r,int g,int b)
  {
    int sizeFontW = getSizeWtxt(chart);
    for(int w=0;w<sizeFontW;w++)
    {
      for(int h=0;h<getDeCacHeight();h++)
      {
        if(getPixelColor(w,h,chart)!=0)
            FontMaker_setpx2(x+w,y+h,r,g,b);
      }
    }
     return sizeFontW;
  }
  void print(int x,int y,unsigned char *s,int r,int g,int b)
  {
    unsigned char offset=0;
    uint16_t utf8_addr;
    while(*s)
    {
      utf8_addr=UTF8_GetAddr(s,&offset);
      x+= putChar(x,y,utf8_addr,r,g,b);
      s+=offset;
      if(x>max_width)return;
    }
  }
  void print(int x,int y,char *s,int r,int g,int b)
  {
    unsigned char offset=0;
    uint16_t utf8_addr;
    while(*s)
    {
      utf8_addr=UTF8_GetAddr((unsigned char *)s,&offset);
      x+= putChar(x,y,utf8_addr,r,g,b);
      s+=offset;
      if(x>max_width)return;
    }
  }
  void print(int x,int y,String str,int r,int g,int b)
  {
    unsigned char offset=0;
    uint16_t utf8_addr;
    unsigned char *s = (unsigned char *)&str[0];
    while(*s)
    {
      utf8_addr=UTF8_GetAddr((unsigned char *)s,&offset);
      x+= putChar(x,y,utf8_addr,r,g,b);
      s+=offset;
      if(x>max_width)return;
    }
  }
  //-----------------------------------Dành cho rgb 565----------------------------------
  void print(int x,int y,unsigned char *s,uint16_t color)
  {
    unsigned char offset=0;
    uint16_t utf8_addr;
    while(*s)
    {
      utf8_addr=UTF8_GetAddr(s,&offset);
      x+= putChar(x,y,utf8_addr,color);
      s+=offset;
      if(x>max_width)return;
    }
  }
  void print(int x,int y,char *s,uint16_t color)
  {
    unsigned char offset=0;
    uint16_t utf8_addr;
    while(*s)
    {
      utf8_addr=UTF8_GetAddr((unsigned char *)s,&offset);
      x+= putChar(x,y,utf8_addr,color);
      s+=offset;
      if(x>max_width)return;
    }
  }
  void print(int x,int y,String str,uint16_t color)
  {
    unsigned char offset=0;
    uint16_t utf8_addr;
    unsigned char *s = (unsigned char *)&str[0];
    while(*s)
    {
      utf8_addr=UTF8_GetAddr((unsigned char *)s,&offset);
      x+= putChar(x,y,utf8_addr,color);
      s+=offset;
      if(x>max_width)return;
    }
  }
  //-----------------------Tính toán độ dài của dòng chữ----------------------------
  uint16_t getLength(unsigned char *s)
  {
     unsigned char offset=0;
     uint16_t utf8_addr;
     uint16_t x=0;
     while(*s)
     {
        utf8_addr=UTF8_GetAddr(s,&offset);
        x += getSizeWtxt(utf8_addr);
        s+=offset;
     }
     return x;
  }
  uint16_t getLength(char *s)
  {
     unsigned char offset=0;
     uint16_t utf8_addr;
     uint16_t x=0;
     while(*s)
     {
        utf8_addr=UTF8_GetAddr((unsigned char *)s,&offset);
        x += getSizeWtxt(utf8_addr);
        s+=offset;
     }
     return x;
  }
  uint16_t getLength(String str)
  {
     unsigned char offset=0;
     uint16_t utf8_addr;
     uint16_t x=0;
     unsigned char *s = (unsigned char *)&str[0];
     while(*s)
     {
        utf8_addr=UTF8_GetAddr(s,&offset);
        x += getSizeWtxt(utf8_addr);
        s+=offset;
     }
     return x;
  }
};
